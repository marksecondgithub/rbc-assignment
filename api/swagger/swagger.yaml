swagger: "2.0"
info:
  version: "0.0.1"
  title: RBC Coding Assignment
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /clients:
    x-swagger-router-controller: clients
    get:
      operationId: clientsList
      description: Returns list of all clients
      parameters: []
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/ClientSchema"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      operationId: clientCreate
      description: Create a new client record
      parameters:
        - in: body
          name: client
          schema:
            $ref: "#/definitions/ClientSchema"
      responses:
        "201":
          description: Success
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /clients/{clientId}:
    x-swagger-router-controller: clients
    parameters:
      - name: clientId
        in: path
        required: true
        type: string
    get:
      operationId: clientById
      description: Return a client by ID
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ClientSchema"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      operationId: clientUpdate
      description: Update a client by ID
      parameters:
        - in: body
          name: client
          schema:
            $ref: "#/definitions/ClientUpdateSchema"
      responses:
        "200":
          description: Success
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      operationId: clientDelete
      description: Delete a client by ID
      responses:
        "200":
          description: Success
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /clients/{clientId}/accounts:
    x-swagger-router-controller: accounts
    parameters:
      - name: clientId
        in: path
        required: true
        type: string
    get:
      operationId: accountsListByClientId
      description: Returns list of all accounts
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/AccountSchema"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      operationId: accountCreate
      description: Create a new account record
      parameters:
        - in: body
          name: account
          schema:
            $ref: "#/definitions/AccountSchema"
      responses:
        "201":
          description: Success
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      
            
  /accounts:
    x-swagger-router-controller: accounts
    get:
      operationId: accountsList
      description: Returns list of all accounts
      parameters: []
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/AccountSchema"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /swagger:
    x-swagger-pipe: swagger_raw

definitions:
  ClientSchema:
    required:
      - name
      - address
      - postalCode
      - phone
      - email
      - dob
    properties:
      name:
        type: string
      address:
        type: string
      postalCode:
        type: string
      phone:
        type: string
      email:
        type: string
      dob:
        type: string
      accounts:
        type: array
        items:
          $ref: "#/definitions/AccountSchema"
          
  ClientUpdateSchema:
    properties:
      name:
        type: string
      address:
        type: string
      postalCode:
        type: string
      phone:
        type: string
      email:
        type: string
      dob:
        type: string
        
  AccountSchema:
    required:
      - type
    properties:
      "type":
        type: string
      status:
        type: string
      
  ErrorResponse:
    required:
      - err
    properties:
      err:
        type: string
